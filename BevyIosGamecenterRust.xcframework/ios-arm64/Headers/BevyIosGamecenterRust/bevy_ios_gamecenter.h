// File automatically generated by swift-bridge.
#include <stdint.h>
#include <stdbool.h>
typedef struct IosGCResolvedConflictsResponse IosGCResolvedConflictsResponse;
void __swift_bridge__$IosGCResolvedConflictsResponse$_free(void* self);

void* __swift_bridge__$Vec_IosGCResolvedConflictsResponse$new(void);
void __swift_bridge__$Vec_IosGCResolvedConflictsResponse$drop(void* vec_ptr);
void __swift_bridge__$Vec_IosGCResolvedConflictsResponse$push(void* vec_ptr, void* item_ptr);
void* __swift_bridge__$Vec_IosGCResolvedConflictsResponse$pop(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCResolvedConflictsResponse$get(void* vec_ptr, uintptr_t index);
void* __swift_bridge__$Vec_IosGCResolvedConflictsResponse$get_mut(void* vec_ptr, uintptr_t index);
uintptr_t __swift_bridge__$Vec_IosGCResolvedConflictsResponse$len(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCResolvedConflictsResponse$as_ptr(void* vec_ptr);

typedef struct IosGCSaveGames IosGCSaveGames;
void __swift_bridge__$IosGCSaveGames$_free(void* self);

void* __swift_bridge__$Vec_IosGCSaveGames$new(void);
void __swift_bridge__$Vec_IosGCSaveGames$drop(void* vec_ptr);
void __swift_bridge__$Vec_IosGCSaveGames$push(void* vec_ptr, void* item_ptr);
void* __swift_bridge__$Vec_IosGCSaveGames$pop(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCSaveGames$get(void* vec_ptr, uintptr_t index);
void* __swift_bridge__$Vec_IosGCSaveGames$get_mut(void* vec_ptr, uintptr_t index);
uintptr_t __swift_bridge__$Vec_IosGCSaveGames$len(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCSaveGames$as_ptr(void* vec_ptr);

typedef struct IosGCFetchItemsForSignatureVerificationResponse IosGCFetchItemsForSignatureVerificationResponse;
void __swift_bridge__$IosGCFetchItemsForSignatureVerificationResponse$_free(void* self);

void* __swift_bridge__$Vec_IosGCFetchItemsForSignatureVerificationResponse$new(void);
void __swift_bridge__$Vec_IosGCFetchItemsForSignatureVerificationResponse$drop(void* vec_ptr);
void __swift_bridge__$Vec_IosGCFetchItemsForSignatureVerificationResponse$push(void* vec_ptr, void* item_ptr);
void* __swift_bridge__$Vec_IosGCFetchItemsForSignatureVerificationResponse$pop(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCFetchItemsForSignatureVerificationResponse$get(void* vec_ptr, uintptr_t index);
void* __swift_bridge__$Vec_IosGCFetchItemsForSignatureVerificationResponse$get_mut(void* vec_ptr, uintptr_t index);
uintptr_t __swift_bridge__$Vec_IosGCFetchItemsForSignatureVerificationResponse$len(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCFetchItemsForSignatureVerificationResponse$as_ptr(void* vec_ptr);

typedef struct IosGCFetchItemsForSignatureVerification IosGCFetchItemsForSignatureVerification;
void __swift_bridge__$IosGCFetchItemsForSignatureVerification$_free(void* self);

void* __swift_bridge__$Vec_IosGCFetchItemsForSignatureVerification$new(void);
void __swift_bridge__$Vec_IosGCFetchItemsForSignatureVerification$drop(void* vec_ptr);
void __swift_bridge__$Vec_IosGCFetchItemsForSignatureVerification$push(void* vec_ptr, void* item_ptr);
void* __swift_bridge__$Vec_IosGCFetchItemsForSignatureVerification$pop(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCFetchItemsForSignatureVerification$get(void* vec_ptr, uintptr_t index);
void* __swift_bridge__$Vec_IosGCFetchItemsForSignatureVerification$get_mut(void* vec_ptr, uintptr_t index);
uintptr_t __swift_bridge__$Vec_IosGCFetchItemsForSignatureVerification$len(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCFetchItemsForSignatureVerification$as_ptr(void* vec_ptr);

typedef struct IosGCDeleteSaveGameResponse IosGCDeleteSaveGameResponse;
void __swift_bridge__$IosGCDeleteSaveGameResponse$_free(void* self);

void* __swift_bridge__$Vec_IosGCDeleteSaveGameResponse$new(void);
void __swift_bridge__$Vec_IosGCDeleteSaveGameResponse$drop(void* vec_ptr);
void __swift_bridge__$Vec_IosGCDeleteSaveGameResponse$push(void* vec_ptr, void* item_ptr);
void* __swift_bridge__$Vec_IosGCDeleteSaveGameResponse$pop(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCDeleteSaveGameResponse$get(void* vec_ptr, uintptr_t index);
void* __swift_bridge__$Vec_IosGCDeleteSaveGameResponse$get_mut(void* vec_ptr, uintptr_t index);
uintptr_t __swift_bridge__$Vec_IosGCDeleteSaveGameResponse$len(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCDeleteSaveGameResponse$as_ptr(void* vec_ptr);

typedef struct IosGCScoreSubmitResponse IosGCScoreSubmitResponse;
void __swift_bridge__$IosGCScoreSubmitResponse$_free(void* self);

void* __swift_bridge__$Vec_IosGCScoreSubmitResponse$new(void);
void __swift_bridge__$Vec_IosGCScoreSubmitResponse$drop(void* vec_ptr);
void __swift_bridge__$Vec_IosGCScoreSubmitResponse$push(void* vec_ptr, void* item_ptr);
void* __swift_bridge__$Vec_IosGCScoreSubmitResponse$pop(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCScoreSubmitResponse$get(void* vec_ptr, uintptr_t index);
void* __swift_bridge__$Vec_IosGCScoreSubmitResponse$get_mut(void* vec_ptr, uintptr_t index);
uintptr_t __swift_bridge__$Vec_IosGCScoreSubmitResponse$len(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCScoreSubmitResponse$as_ptr(void* vec_ptr);

typedef struct IosGCAchievementsResetResponse IosGCAchievementsResetResponse;
void __swift_bridge__$IosGCAchievementsResetResponse$_free(void* self);

void* __swift_bridge__$Vec_IosGCAchievementsResetResponse$new(void);
void __swift_bridge__$Vec_IosGCAchievementsResetResponse$drop(void* vec_ptr);
void __swift_bridge__$Vec_IosGCAchievementsResetResponse$push(void* vec_ptr, void* item_ptr);
void* __swift_bridge__$Vec_IosGCAchievementsResetResponse$pop(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCAchievementsResetResponse$get(void* vec_ptr, uintptr_t index);
void* __swift_bridge__$Vec_IosGCAchievementsResetResponse$get_mut(void* vec_ptr, uintptr_t index);
uintptr_t __swift_bridge__$Vec_IosGCAchievementsResetResponse$len(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCAchievementsResetResponse$as_ptr(void* vec_ptr);

typedef struct IosGCAchievementProgressResponse IosGCAchievementProgressResponse;
void __swift_bridge__$IosGCAchievementProgressResponse$_free(void* self);

void* __swift_bridge__$Vec_IosGCAchievementProgressResponse$new(void);
void __swift_bridge__$Vec_IosGCAchievementProgressResponse$drop(void* vec_ptr);
void __swift_bridge__$Vec_IosGCAchievementProgressResponse$push(void* vec_ptr, void* item_ptr);
void* __swift_bridge__$Vec_IosGCAchievementProgressResponse$pop(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCAchievementProgressResponse$get(void* vec_ptr, uintptr_t index);
void* __swift_bridge__$Vec_IosGCAchievementProgressResponse$get_mut(void* vec_ptr, uintptr_t index);
uintptr_t __swift_bridge__$Vec_IosGCAchievementProgressResponse$len(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCAchievementProgressResponse$as_ptr(void* vec_ptr);

typedef struct IosGCAchievement IosGCAchievement;
void __swift_bridge__$IosGCAchievement$_free(void* self);

void* __swift_bridge__$Vec_IosGCAchievement$new(void);
void __swift_bridge__$Vec_IosGCAchievement$drop(void* vec_ptr);
void __swift_bridge__$Vec_IosGCAchievement$push(void* vec_ptr, void* item_ptr);
void* __swift_bridge__$Vec_IosGCAchievement$pop(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCAchievement$get(void* vec_ptr, uintptr_t index);
void* __swift_bridge__$Vec_IosGCAchievement$get_mut(void* vec_ptr, uintptr_t index);
uintptr_t __swift_bridge__$Vec_IosGCAchievement$len(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCAchievement$as_ptr(void* vec_ptr);

typedef struct IosGCLoadGamesResponse IosGCLoadGamesResponse;
void __swift_bridge__$IosGCLoadGamesResponse$_free(void* self);

void* __swift_bridge__$Vec_IosGCLoadGamesResponse$new(void);
void __swift_bridge__$Vec_IosGCLoadGamesResponse$drop(void* vec_ptr);
void __swift_bridge__$Vec_IosGCLoadGamesResponse$push(void* vec_ptr, void* item_ptr);
void* __swift_bridge__$Vec_IosGCLoadGamesResponse$pop(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCLoadGamesResponse$get(void* vec_ptr, uintptr_t index);
void* __swift_bridge__$Vec_IosGCLoadGamesResponse$get_mut(void* vec_ptr, uintptr_t index);
uintptr_t __swift_bridge__$Vec_IosGCLoadGamesResponse$len(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCLoadGamesResponse$as_ptr(void* vec_ptr);

typedef struct IosGCSaveGamesResponse IosGCSaveGamesResponse;
void __swift_bridge__$IosGCSaveGamesResponse$_free(void* self);

void* __swift_bridge__$Vec_IosGCSaveGamesResponse$new(void);
void __swift_bridge__$Vec_IosGCSaveGamesResponse$drop(void* vec_ptr);
void __swift_bridge__$Vec_IosGCSaveGamesResponse$push(void* vec_ptr, void* item_ptr);
void* __swift_bridge__$Vec_IosGCSaveGamesResponse$pop(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCSaveGamesResponse$get(void* vec_ptr, uintptr_t index);
void* __swift_bridge__$Vec_IosGCSaveGamesResponse$get_mut(void* vec_ptr, uintptr_t index);
uintptr_t __swift_bridge__$Vec_IosGCSaveGamesResponse$len(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCSaveGamesResponse$as_ptr(void* vec_ptr);

typedef struct IosGCSavedGameResponse IosGCSavedGameResponse;
void __swift_bridge__$IosGCSavedGameResponse$_free(void* self);

void* __swift_bridge__$Vec_IosGCSavedGameResponse$new(void);
void __swift_bridge__$Vec_IosGCSavedGameResponse$drop(void* vec_ptr);
void __swift_bridge__$Vec_IosGCSavedGameResponse$push(void* vec_ptr, void* item_ptr);
void* __swift_bridge__$Vec_IosGCSavedGameResponse$pop(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCSavedGameResponse$get(void* vec_ptr, uintptr_t index);
void* __swift_bridge__$Vec_IosGCSavedGameResponse$get_mut(void* vec_ptr, uintptr_t index);
uintptr_t __swift_bridge__$Vec_IosGCSavedGameResponse$len(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCSavedGameResponse$as_ptr(void* vec_ptr);

typedef struct IosGCSaveGame IosGCSaveGame;
void __swift_bridge__$IosGCSaveGame$_free(void* self);

void* __swift_bridge__$Vec_IosGCSaveGame$new(void);
void __swift_bridge__$Vec_IosGCSaveGame$drop(void* vec_ptr);
void __swift_bridge__$Vec_IosGCSaveGame$push(void* vec_ptr, void* item_ptr);
void* __swift_bridge__$Vec_IosGCSaveGame$pop(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCSaveGame$get(void* vec_ptr, uintptr_t index);
void* __swift_bridge__$Vec_IosGCSaveGame$get_mut(void* vec_ptr, uintptr_t index);
uintptr_t __swift_bridge__$Vec_IosGCSaveGame$len(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCSaveGame$as_ptr(void* vec_ptr);

typedef struct IosGCAuthResult IosGCAuthResult;
void __swift_bridge__$IosGCAuthResult$_free(void* self);

void* __swift_bridge__$Vec_IosGCAuthResult$new(void);
void __swift_bridge__$Vec_IosGCAuthResult$drop(void* vec_ptr);
void __swift_bridge__$Vec_IosGCAuthResult$push(void* vec_ptr, void* item_ptr);
void* __swift_bridge__$Vec_IosGCAuthResult$pop(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCAuthResult$get(void* vec_ptr, uintptr_t index);
void* __swift_bridge__$Vec_IosGCAuthResult$get_mut(void* vec_ptr, uintptr_t index);
uintptr_t __swift_bridge__$Vec_IosGCAuthResult$len(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCAuthResult$as_ptr(void* vec_ptr);

typedef struct IosGCPlayer IosGCPlayer;
void __swift_bridge__$IosGCPlayer$_free(void* self);

void* __swift_bridge__$Vec_IosGCPlayer$new(void);
void __swift_bridge__$Vec_IosGCPlayer$drop(void* vec_ptr);
void __swift_bridge__$Vec_IosGCPlayer$push(void* vec_ptr, void* item_ptr);
void* __swift_bridge__$Vec_IosGCPlayer$pop(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCPlayer$get(void* vec_ptr, uintptr_t index);
void* __swift_bridge__$Vec_IosGCPlayer$get_mut(void* vec_ptr, uintptr_t index);
uintptr_t __swift_bridge__$Vec_IosGCPlayer$len(void* vec_ptr);
void* __swift_bridge__$Vec_IosGCPlayer$as_ptr(void* vec_ptr);

void* __swift_bridge__$IosGCPlayer$new(void* game_id, void* team_id, bool is_authenticated, void* alias, void* display_name);
void* __swift_bridge__$IosGCAuthResult$authenticated(void);
void* __swift_bridge__$IosGCAuthResult$login_presented(void);
void* __swift_bridge__$IosGCAuthResult$error(void* e);
void* __swift_bridge__$IosGCSaveGame$new(void* name, void* device_name, uint64_t modification_date);
void* __swift_bridge__$IosGCSavedGameResponse$done(void* save);
void* __swift_bridge__$IosGCSavedGameResponse$error(void* e);
bool __swift_bridge__$IosGCSaveGame$equals(void* a, void* b);
void* __swift_bridge__$IosGCSaveGamesResponse$done(void* items);
void* __swift_bridge__$IosGCSaveGamesResponse$error(void* e);
void* __swift_bridge__$IosGCLoadGamesResponse$done(void* save_game, void* data);
void* __swift_bridge__$IosGCLoadGamesResponse$unknown(void* save_game);
void* __swift_bridge__$IosGCLoadGamesResponse$error(void* e);
void* __swift_bridge__$IosGCAchievement$new(void* identifier, double progress, bool is_completed, uint64_t last_reported_date);
void* __swift_bridge__$IosGCAchievementProgressResponse$done(void* a);
void* __swift_bridge__$IosGCAchievementProgressResponse$error(void* e);
void* __swift_bridge__$IosGCAchievementsResetResponse$done(void);
void* __swift_bridge__$IosGCAchievementsResetResponse$error(void* e);
void* __swift_bridge__$IosGCScoreSubmitResponse$done(void);
void* __swift_bridge__$IosGCScoreSubmitResponse$error(void* e);
void* __swift_bridge__$IosGCDeleteSaveGameResponse$done(void* e);
void* __swift_bridge__$IosGCDeleteSaveGameResponse$error(void* e);
void* __swift_bridge__$IosGCFetchItemsForSignatureVerification$new(void* url, void* signature_as_base64, void* salt_as_base64, uint64_t timestamp);
void* __swift_bridge__$IosGCFetchItemsForSignatureVerificationResponse$done(void* items);
void* __swift_bridge__$IosGCFetchItemsForSignatureVerificationResponse$error(void* e);
void* __swift_bridge__$IosGCSaveGames$new(void* items);
bool __swift_bridge__$IosGCSaveGames$contains(void* items, void* item);
void* __swift_bridge__$IosGCResolvedConflictsResponse$done(void* items);
void* __swift_bridge__$IosGCResolvedConflictsResponse$error(void* e);
void __swift_bridge__$receive_authentication(int64_t request, void* result);
void __swift_bridge__$receive_player(int64_t request, void* p);
void __swift_bridge__$receive_load_game(int64_t request, void* response);
void __swift_bridge__$receive_saved_game(int64_t request, void* response);
void __swift_bridge__$receive_save_games(int64_t request, void* response);
void __swift_bridge__$receive_deleted_game(int64_t request, void* response);
void __swift_bridge__$receive_achievement_progress(int64_t request, void* response);
void __swift_bridge__$receive_achievement_reset(int64_t request, void* response);
void __swift_bridge__$receive_leaderboard_score(int64_t request, void* response);
void __swift_bridge__$receive_items_for_signature_verification(int64_t request, void* response);
void __swift_bridge__$receive_resolved_conflicts(int64_t request, void* response);
void __swift_bridge__$receive_conflicting_savegames(void* savegames);


